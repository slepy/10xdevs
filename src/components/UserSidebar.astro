---
import type { UserDTO } from "../types";

interface Props {
  user: UserDTO;
  currentPath: string;
}

const { user, currentPath } = Astro.props;

interface MenuItem {
  label: string;
  href: string;
  icon: string;
}

const menuItems: MenuItem[] = [
  {
    label: "Dashboard",
    href: "/dashboard",
    icon: "M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6",
  },
  {
    label: "Oferty",
    href: "/offers",
    icon: "M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10",
  },
  {
    label: "Moje Inwestycje",
    href: "/investments",
    icon: "M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z",
  },
  {
    label: "Profil",
    href: "/profile",
    icon: "M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z",
  },
];

function isActive(href: string): boolean {
  if (href === "/dashboard") {
    return currentPath === "/dashboard";
  }
  return currentPath.startsWith(href);
}
---

<div class="p-6" data-testid="user-sidebar">
  <!-- User Info -->
  <div class="mb-8">
    <div
      class="w-16 h-16 rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center text-white text-2xl font-bold mb-4"
    >
      {user.firstName?.[0]?.toUpperCase() || user.email[0].toUpperCase()}
    </div>
    <h3 class="font-semibold text-gray-900">
      {user.firstName && user.lastName ? `${user.firstName} ${user.lastName}` : user.email}
    </h3>
    <p class="text-sm text-gray-500">{user.email}</p>
  </div>

  <!-- Navigation Menu -->
  <nav class="space-y-2" data-testid="sidebar-menu">
    {
      menuItems.map((item) => (
        <a
          href={item.href}
          class:list={[
            "flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors",
            isActive(item.href)
              ? "bg-blue-50 text-blue-600 font-medium"
              : "text-gray-700 hover:bg-gray-50 hover:text-gray-900",
          ]}
          data-testid={`sidebar-${item.label.toLowerCase().replace(/\s+/g, "-")}`}
        >
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon} />
          </svg>
          <span>{item.label}</span>
        </a>
      ))
    }
  </nav>
</div>
